{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kasisatyaveni\\\\warrantyMe_assignment\\\\frontend\\\\src\\\\components\\\\letterEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LetterEditor = () => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const saveToGoogleDrive = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/drive/upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          letterContent: content\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(\"Letter saved to Google Drive!\");\n      } else {\n        alert(\"Failed to save letter.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Letter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveToGoogleDrive,\n      children: \"Save to Google Drive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LetterEditor, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n_c = LetterEditor;\nexport default LetterEditor;\nvar _c;\n$RefreshReg$(_c, \"LetterEditor\");","map":{"version":3,"names":["React","useState","ReactQuill","jsxDEV","_jsxDEV","LetterEditor","_s","content","setContent","saveToGoogleDrive","response","fetch","method","headers","body","JSON","stringify","letterContent","data","json","success","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kasisatyaveni/warrantyMe_assignment/frontend/src/components/letterEditor.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nconst LetterEditor = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const saveToGoogleDrive = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/drive/upload\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ letterContent: content }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert(\"Letter saved to Google Drive!\");\r\n      } else {\r\n        alert(\"Failed to save letter.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a Letter</h2>\r\n      <ReactQuill value={content} onChange={setContent} />\r\n      <button onClick={saveToGoogleDrive}>Save to Google Drive</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LetterEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,aAAa,EAAEV;QAAQ,CAAC;MACjD,CAAC,CAAC;MAEF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBC,KAAK,CAAC,+BAA+B,CAAC;MACxC,CAAC,MAAM;QACLA,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACElB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBxB,OAAA,CAACF,UAAU;MAAC2B,KAAK,EAAEtB,OAAQ;MAACuB,QAAQ,EAAEtB;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpDxB,OAAA;MAAQ2B,OAAO,EAAEtB,iBAAkB;MAAAe,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7BID,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}